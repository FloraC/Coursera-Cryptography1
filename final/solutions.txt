--------------------------------------------------------------------------------
1.

Error correcting codes are designed to be tolerant against random changes
during transmission.  If the ECC encoding is permuted randomly by an
encryption function, it won't work correctly.

Even more importantly, decryption needs an error free input to work
effectively.  If a system tries to decrypt an erroneous ciphertext, the
resulting pre-ECC plaintext will be meaningless.

Therefore you should encrypt and then apply the ECC.

--------------------------------------------------------------------------------
2.

For any bit X[i], we have 

P(X[i] == 0) = p = 1/2

so

P(X[i] xor Y[i] == 0)
= P(X[i] == 0 and Y[i] == 0 or X[i] == 1 and Y[i] == 1)
= P(X[i] == 0 and Y[i] == 0) + P(X[i] == 1 and Y[i] == 1)
= p*P(Y[i]==0) + (1-p)*P(Y[i]==1)

Letting q(i, ...) = q = P(Y[i]==0)
= pq + (1-p)*(1-q)
= pq + 1 - q - p + qp
= 1 + q - q - 1/2
= 1/2


Since i was arbitrary, the result Z= X ^ Y is a uniform distribution over
{0,1}^n

So 0^n occurs with probability 1/2^n

--------------------------------------------------------------------------------
3.

Not sure why the question mentions both (E1,D1) and (E2,D2)...

Since (E1,D1) is deterministic, it cannot offer many time semantic security.
However, it can offer one time semantic security. Since the key space is
smaller than the message space, the cipher cannot be perfectly secure.

--------------------------------------------------------------------------------
4.

CBC mode requires the the block cipher be reversible, so it must be a PRP.  On
the other hand, CTR mode can be configured to only use the encryption directly
of the block cipher, so it will work with just a PRF.

--------------------------------------------------------------------------------
5.




--------------------------------------------------------------------------------
6.

If the same key is used to encrypt 2^32 messages, we need to have at least
(2^32)^2 or 2^64 distinct, uniformly sampled nonces in order to have a <1/2
probability of not having a nonce collision.  So the nonce space should be
2^128.

--------------------------------------------------------------------------------
7.

Since the nonces will not collide until the entire nonce space has been used,
it is acceptable to use a nonce space the same size as the number of messages
that are expected to be sent, or just 2^32 nonces.

--------------------------------------------------------------------------------
8.



--------------------------------------------------------------------------------
9.


--------------------------------------------------------------------------------
10.


--------------------------------------------------------------------------------
11.


--------------------------------------------------------------------------------
